/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.FoodItems.FoodItem;
import Business.Orders.Order;
import Business.Restaurant.Restaurant;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author palak
 */
public class CustomerPlaceOrder extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPlaceOrder
     */
    JPanel userProcessContainer;
    Customer customer;
    Restaurant restaurant;
    Order order;
    int totalAmount = 0;
    ArrayList<FoodItem> cart = new ArrayList<FoodItem>();
    public CustomerPlaceOrder(JPanel userProcessContainer, Customer customer, Restaurant rest) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customer = customer;
        this.restaurant = rest;
        lblRestaurant.setText("Restaurant: " +this.restaurant.getName());
        populateMenu(); 
        populateOrder();
        if(tblOrder.getRowCount() <= 0)
        {
            btnOrder.setEnabled(false);
        }
    }

    public void populateMenu()
    {
        DefaultTableModel dtm = (DefaultTableModel)tblMenu.getModel();
        dtm.setRowCount(0);
        if(restaurant.getMenu().getFoodItemList() != null)
        {
            for(FoodItem foodItem : restaurant.getMenu().getFoodItemList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = foodItem.getId();
                row[1] = foodItem;
                row[2] = foodItem.getPrice();
                dtm.addRow(row);
            }
        }
        if(dtm.getRowCount() == 0)
            {
                btnAddItem.setEnabled(false);
                btnDelete.setEnabled(false);
            }
    }
    
    public void populateOrder()
    {
        DefaultTableModel dtm = (DefaultTableModel)tblOrder.getModel();
        dtm.setRowCount(0);
        if(cart != null)
        {
            btnDelete.setEnabled(true);
            btnOrder.setEnabled(true);
            int count = 1;
            for(FoodItem foodItem : cart)
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = count;
                row[1] = foodItem;
                row[2] = foodItem.getPrice();
                dtm.addRow(row);
                count++;
            }
            txtAmount.setText(Integer.toString(totalAmount));
        }
        if(tblOrder.getRowCount() <= 0)
        {
            btnOrder.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel1 = new javax.swing.JLabel();
        valueLabel1 = new javax.swing.JLabel();
        lblRestaurant = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnAddItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnOrder = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        enterpriseLabel1.setText("Welcome! ");

        valueLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        valueLabel1.setText("<value>");

        lblRestaurant.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblRestaurant.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRestaurant.setText("<value>");

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order No", "Food Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Food Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMenuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMenu);

        btnAddItem.setText("Add Item to Order");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Amount:");

        txtAmount.setEditable(false);

        btnDelete.setText("Delete Item");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnOrder.setText("Confirm Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnOrder)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(200, 200, 200)
                                            .addComponent(jLabel1))
                                        .addComponent(btnDelete)))
                                .addGap(18, 18, 18)
                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblRestaurant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(btnAddItem)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddItem)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(jLabel1)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnOrder)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMenuMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblMenu.getSelectedRow();
        if (selectedRow >= 0)
        {
            btnAddItem.setEnabled(true);
        }
    }//GEN-LAST:event_tblMenuMouseClicked

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMenu.getSelectedRow();
        if (selectedRow >= 0)
        {
            FoodItem foodItem = (FoodItem) tblMenu.getValueAt(selectedRow, 1);
            cart.add(foodItem);
            JOptionPane.showMessageDialog(null, "Food Item " + foodItem.getName()+ " added to cart successfully!");
            totalAmount = totalAmount + foodItem.getPrice();
            populateOrder();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow1 = tblOrder.getSelectedRow();
        if (selectedRow1 >= 0)
        {
            FoodItem foodItem = (FoodItem) tblOrder.getValueAt(selectedRow1, 1);
            cart.remove(foodItem);
            JOptionPane.showMessageDialog(null, "Food Item " + foodItem.getName()+ " deleted from cart Successfully!");
            totalAmount = totalAmount - foodItem.getPrice();
            populateOrder();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        order = restaurant.getOrderDirectory().createNewOrder(customer);
        for(FoodItem foodItem : cart)
        {
            order.addItem(foodItem);
        }
        order.calculateTotalAmount();
        JOptionPane.showMessageDialog(null, "Order of " + order.getFoodItemList().size() + " food item(s) for amount " + order.getTotalAmount() + " placed successfully!");
    }//GEN-LAST:event_btnOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRestaurant;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JLabel valueLabel1;
    // End of variables declaration//GEN-END:variables
}
